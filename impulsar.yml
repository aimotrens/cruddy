build:
  jobs:
    - build-frontend
    - copy
    - build-backend

build-frontend:
  workDir: frontend
  script:
    - npm install
    - npm run build

copy:
  conditional:
    - if: ["env.os === 'linux'"]
      overwrite:
        script:
          - |
            mv frontend/dist/index.html frontend/dist/index.htm && \
            rsync -aP --delete frontend/dist/ backend/static/
    - if: ["env.os === 'windows'"]
      overwrite:
        shell:
          type: pwsh
        script:
          - Move-Item frontend/dist/index.html frontend/dist/index.htm
          - Remove-Item -Recurse -Force backend/static/*
          - Copy-Item -Recurse frontend/dist/* backend/static/
  script:
    - echo "Unknown platform"
    - STOP

build-backend:
  foreach: &platforms
    - GOOS: linux
      GOARCH: amd64
      EXE_SUFFIX: ""
    - GOOS: linux
      GOARCH: arm64
      EXE_SUFFIX: ""
    - GOOS: windows
      GOARCH: amd64
      EXE_SUFFIX: ".exe"
    - GOOS: windows
      GOARCH: arm64
      EXE_SUFFIX: ".exe"
    - GOOS: darwin
      GOARCH: amd64
      EXE_SUFFIX: ""
    - GOOS: darwin
      GOARCH: arm64
      EXE_SUFFIX: ""
  conditional:
    - if: ["env.os === 'linux'"]
      overwrite:
        script:
          - mkdir -p ../release
          - go build -ldflags "-X \"main.cruddyVersion=${CRUDDY_VERSION}\" -X \"main.compileDate=$(date)\"" -o ../release/cruddy_${GOOS}_${GOARCH}${EXE_SUFFIX}
    - if: ["env.os === 'windows'"]
      overwrite:
        script:
          - New-Item -ItemType Directory -Force -Path ../release
          - go build -ldflags "-X `"main.cruddyVersion=${CRUDDY_VERSION}`" -X `"main.compileDate=$(date)`"" -o ../release/cruddy_${GOOS}_${GOARCH}${EXE_SUFFIX}
  workDir: backend
  script:
    - echo "Unknown platform"
    - STOP

# ---

pack-release:
  foreach: *platforms
  script:
    - mkdir -p ./release/artifacts
    - |
      if [ "${GOOS}" == "windows" ]; then
        zip -j ./release/artifacts/cruddy_${GOOS}_${GOARCH}.zip ./release/cruddy_${GOOS}_${GOARCH}${EXE_SUFFIX}
      else
        tar -czf ./release/artifacts/cruddy_${GOOS}_${GOARCH}.tar.gz ./release/cruddy_${GOOS}_${GOARCH}${EXE_SUFFIX}
      fi

# ---

build-docker:
  script:
    - docker build --platform=linux/amd64,linux/arm64 --push -f .docker/Dockerfile -t ${IMAGE} .
